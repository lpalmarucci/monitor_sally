{"version":3,"sources":["components/ChartComponent.js","containers/ChartContainer.js","App.js","index.js"],"names":["ChartComponent","props","useState","data","setData","labels","setLabels","useEffect","len","data_from_sheet","length","xValues","yValues","idx","push","Time","name","shift","console","log","datasets","fill","label","backgroundColor","options","opt_datasets","borderColor","borderWidth","pointRadius","pointStyle","pointBorderWidth","pointHoverBorderWidth","height","width","maintainAspectRatio","title","display","text","scales","yAxes","ticks","beginAtZero","min","max","stepSize","ChartContainer","q_data","setInterval","Tabletop","init","key","simpleSheet","then","className","animationEnabled","exportEnabled","theme","axisY","suffix","axisX","App","ReactDOM","render","document","getElementById"],"mappings":"sNAmFeA,MA/Ef,SAAwBC,GAEpB,IAF0B,EAIJC,mBAAS,IAJL,mBAIrBC,EAJqB,KAIfC,EAJe,OAKAF,mBAAS,IALT,mBAKrBG,EALqB,KAKbC,EALa,KAkC1B,OA3BAC,qBAAU,WACN,IAAIC,EAAMP,EAAMQ,gBAAgBC,OAC5BC,EAAU,GACVC,EAAU,GACd,GAAW,IAARJ,EAAU,CACT,IAAI,IAAIK,EAAM,EAAEA,EAAML,EAAIK,IACtBF,EAAQG,KAAKb,EAAMQ,gBAAgBI,GAAKE,MACxCH,EAAQE,KAAKb,EAAMQ,gBAAgBI,GAAKZ,EAAMe,OAElD,GAAGR,EAduB,GAetB,IAAI,IAAIK,EAAM,EAAEA,EAAML,EAfA,GAeiCK,IACnDF,EAAQM,QACRL,EAAQK,QAMpBX,EAAUK,GAEVP,EAAQQ,KAGV,CAACX,EAAMQ,kBAETS,QAAQC,IAAIlB,GAGR,8BACI,cAAC,OAAD,CACIE,KAAM,CACFE,OAASA,EACTe,SAAW,CAAC,CACRC,MAAM,EACNC,MAAQrB,EAAMe,KACdb,KAAOA,EACPoB,gBAAiBtB,EAAMuB,QAAQC,aAAaF,gBAC5CG,YAAazB,EAAMuB,QAAQC,aAAaC,YACxCC,YAAa,EACbC,YAAa,EACbC,WAAW,SACXC,iBAAkB,EAClBC,sBAAwB,MAIhCC,OAAQ,IACRC,MAAO,IACPT,QAAS,CACLU,qBAAqB,EACrBC,MAAQ,CACJC,SAAU,EACVC,KAAO,qDAEXC,OAAS,CACLC,MAAQ,CAAC,CACLC,MAAO,CAEHC,aAAc,EACdC,IAAKzC,EAAMuB,QAAQkB,IACnBC,IAAK1C,EAAMuB,QAAQmB,IACnBC,SAAU3C,EAAMuB,QAAQoB,mBCkBzCC,MArFf,SAAwB5C,GACpB,IAAImC,EAAU,4CADY,EAiDDlC,mBAAS,IAjDR,mBAiDnB4C,EAjDmB,KAiDZ1C,EAjDY,KAkF1B,OA/BAG,qBAAU,WACNwC,aAAY,WACRC,IAASC,KAAM,CACPC,IAAK,uGACLC,aAAa,IACdC,MAAK,SAACjD,GACLC,EAAQD,QAElB,OACJ,IAEC2C,EAAOpC,OAAS,IACf0B,EAAU,sBAAKiB,UAAU,iBAAf,UACE,qBAAKA,UAAU,UAAf,SACI,cAAC,EAAD,CACI5C,gBAAiBqC,EACjBtB,QAhEI,CACxB8B,kBAAkB,EAClBC,eAAe,EACfC,MAAO,SACPrB,MAAQ,CACNE,KAAO,eAEToB,MAAQ,CACNtB,MAAQ,cACRuB,OAAS,QAEXC,MAAQ,CACNxB,MAAQ,QAEVV,aAAc,CACZF,gBAAiB,mBACjBG,YAAa,0BAEfgB,IAAK,GACLC,IAAK,GACLC,SAAU,KA6CU5B,KAAK,kBAIb,qBAAKqC,UAAU,UAAf,SACI,cAAC,EAAD,CACI5C,gBAAiBqC,EACjBtB,QAjDM,CAC1B8B,kBAAkB,EAClBC,eAAe,EACfC,MAAO,SACPrB,MAAQ,CACNE,KAAO,YAEToB,MAAQ,CACNtB,MAAQ,aACRuB,OAAS,KAEXC,MAAQ,CACNxB,MAAQ,QAEVV,aAAc,CACVF,gBAAiB,oBACjBG,YAAa,2BAEjBgB,IAAK,GACLC,IAAK,IACLC,SAAU,GA8BU5B,KAAK,mBAMpB,oCAAOoB,EAAP,Q,OCxEEwB,MATf,WAEE,OACE,qBAAKP,UAAU,UAAf,SACE,cAAC,EAAD,OCNNQ,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.425c17d8.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\n\nimport {Line} from 'react-chartjs-2';\n\nfunction ChartComponent(props){\n\n    const NUM__PUNTI__DA__DISEGNARE = 10;\n\n    var [data, setData] = useState([]);\n    var [labels, setLabels] = useState([]);\n\n    useEffect(() => {\n        let len = props.data_from_sheet.length;\n        let xValues = [];\n        let yValues = [];\n        if(len !== 0){\n            for(let idx = 0;idx < len;idx++){\n                xValues.push(props.data_from_sheet[idx].Time);\n                yValues.push(props.data_from_sheet[idx][props.name]);\n            }\n            if(len > NUM__PUNTI__DA__DISEGNARE){\n                for(let idx = 0;idx < len - NUM__PUNTI__DA__DISEGNARE; idx++){\n                    xValues.shift();\n                    yValues.shift();\n                }\n            }\n        }\n\n        //X\n        setLabels(xValues);\n        //Y\n        setData(yValues);\n\n        \n    },[props.data_from_sheet]);\n\n    console.log(props);\n\n    return (\n        <div>\n            <Line \n                data={{\n                    labels : labels,\n                    datasets : [{\n                        fill: false,\n                        label : props.name,\n                        data : data,\n                        backgroundColor: props.options.opt_datasets.backgroundColor,\n                        borderColor: props.options.opt_datasets.borderColor,\n                        borderWidth: 6,\n                        pointRadius: 6,\n                        pointStyle:\"circle\",\n                        pointBorderWidth: 6,\n                        pointHoverBorderWidth : 10,\n                        // lineTension : 0\n                    }]\n                }}\n                height={400}\n                width={600}\n                options={{\n                    maintainAspectRatio: false,\n                    title : {\n                        display : false,\n                        text : \"Grafici per la nostra amata sally 🍁\"\n                    },\n                    scales : {\n                        yAxes : [{\n                            ticks: {\n                                // maxTicksLimit: 11,\n                                beginAtZero : true,\n                                min: props.options.min,\n                                max: props.options.max,\n                                stepSize: props.options.stepSize\n                            }\n                        }]\n                    }\n                }}\n            />\n        </div>\n    )\n\n}\n\nexport default ChartComponent;","import React, {useEffect, useState} from 'react';\nimport Tabletop from 'tabletop';\nimport ChartComponent from '../components/ChartComponent';\n\n\nfunction ChartContainer(props){\n    var display = <h1>Loading...</h1>;\n\n    const charts_temp_options = {\n        animationEnabled: true,\n        exportEnabled: false,\n        theme: \"light1\", // \"light1\", \"dark1\", \"dark2\"\n        title : {\n          text : \"Temperature\"\n        },\n        axisY : {\n          title : \"Temperature\",\n          suffix : \"°\"\n        },\n        axisX : {\n          title : \"Time\"\n        },\n        opt_datasets: {\n          backgroundColor: \"rgb(224, 11, 33)\",\n          borderColor: 'rgba(224, 11, 33, 0.3)'\n        },\n        min: 18,\n        max: 40,\n        stepSize: 2.5\n      }\n    \n      const charts_humi_options = {\n        animationEnabled: true,\n        exportEnabled: false,\n        theme: \"light1\", // \"light1\", \"dark1\", \"dark2\"\n        title : {\n          text : \"Humidity\"\n        },\n        axisY : {\n          title : \"Percentage\",\n          suffix : \"%\"\n        },\n        axisX : {\n          title : \"Time\"\n        },\n        opt_datasets: {\n            backgroundColor: \"rgb(74, 181, 211)\",\n            borderColor: 'rgba(74, 181, 211, 0.3)'\n        },\n        min: 50,\n        max: 100,\n        stepSize: 5\n      }\n\n    const [q_data,setData] = useState([]);\n\n    useEffect(() => {\n        setInterval(() => {\n            Tabletop.init( {\n                    key: 'https://docs.google.com/spreadsheets/d/18W3JiJbGZPc3IT2YhUlwp2XYH6lnqxG4nqsFGbXsj9o/edit?usp=sharing',\n                    simpleSheet: true \n                }).then((data) => {\n                    setData(data);\n                })\n        },5000);\n    },[]);\n\n    if(q_data.length > 0){\n        display = <div className=\"chartContainer\"> \n                    <div className=\"chart-1\">\n                        <ChartComponent \n                            data_from_sheet={q_data} \n                            options={charts_temp_options}\n                            name=\"Temperature\"\n                        />\n                    </div>\n\n                    <div className=\"chart-2\">\n                        <ChartComponent \n                            data_from_sheet={q_data} \n                            options={charts_humi_options}\n                            name=\"Humidity\"\n                        />\n                    </div>\n                  </div>\n    }\n\n    return ( <div> {display} </div> )\n}\n\nexport default ChartContainer;","\n\nimport React from 'react';\nimport ChartContainer from './containers/ChartContainer';\nimport './Charts.css';\n\nfunction App() {\n\n  return (\n    <div className=\"wrapper\">\n      <ChartContainer/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}